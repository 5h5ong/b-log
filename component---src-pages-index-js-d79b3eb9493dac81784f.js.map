{"version":3,"file":"component---src-pages-index-js-d79b3eb9493dac81784f.js","mappings":"wHAGMA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAM,uBAW5B,IAJ0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OAAO,gBAACF,EAAD,KAAgBE,K,wECLnBC,EAAWF,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAK,uCAChBG,EAAWH,EAAAA,QAAAA,KAAAA,WAAH,gEAAGA,CAAO,gBAwBxB,IAnBoB,SAAC,GAA+B,IAA7BI,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACxC,OACE,gBAAC,IAAD,CAAYA,GAAIA,GACd,gBAACL,EAAD,KAAWE,GACX,gCACE,gBAAC,IAAD,KACE,gBAACD,EAAD,KAAWE,KAEZC,MAAAA,OAAA,EAAAA,EAAME,QAAS,GACdF,EAAKG,KAAI,SAACC,GAAD,OACP,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,KAAMD,Y,+EChBnBE,EAAOZ,EAAAA,QAAAA,KAAAA,WAAH,sDAAGA,CAAO,mCAEda,EAAS,WACb,OAAO,gBAAC,IAAD,CAAYT,MAAM,aAAaU,IAAI,eAoD5C,UAhDkB,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAErC,OAAqB,IAAjBH,EAAMP,OAEN,gBAACI,EAAD,KACE,gBAACC,EAAD,MACA,kDAKF,gBAACD,EAAD,KACE,gBAACC,EAAD,MACCE,EAAMN,KAAI,SAACU,GACV,IACYC,EACRD,EADFE,OAAUD,KAEZ,EAA8BD,EAAKG,YAA3BlB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KACrB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAaF,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,EAAMC,GAAIa","sources":["webpack://b-log/./src/components/ElementGapWrapper.js","webpack://b-log/./src/components/PostPreview.js","webpack://b-log/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\n\nconst StyledWrapper = tw.div`\n  mb-16\n`;\n\n/**\n * children의 수직 간격을 띄움\n */\nconst ElementGapWrapper = ({ children }) => {\n  return <StyledWrapper>{children}</StyledWrapper>;\n};\n\nexport default ElementGapWrapper;\n","import React from \"react\";\nimport StyledLink from \"./StyledLink\";\nimport tw from \"twin.macro\";\nimport { GapHorizontality } from \"../styles/gaps\";\nimport Tag from \"./Tag\";\n\nconst StyledH1 = tw.h1`m-0 mb-3`;\nconst StyledP1 = tw.span`m-0`;\n\n/**\n * 포스트의 타이틀, 날짜를 표시함. 클릭 시 해당 포스트로 이동함.\n */\nconst PostPreview = ({ title, date, tags, to }) => {\n  return (\n    <StyledLink to={to}>\n      <StyledH1>{title}</StyledH1>\n      <>\n        <GapHorizontality>\n          <StyledP1>{date}</StyledP1>\n        </GapHorizontality>\n        {tags?.length > 0 &&\n          tags.map((tag) => (\n            <GapHorizontality>\n              <Tag name={tag} />\n            </GapHorizontality>\n          ))}\n      </>\n    </StyledLink>\n  );\n};\n\nexport default PostPreview;\n","import { graphql } from \"gatsby\";\nimport * as React from \"react\";\nimport tw from \"twin.macro\";\nimport BlogHeader from \"../components/BlogHeader\";\nimport ElementGapWrapper from \"../components/ElementGapWrapper\";\nimport PostPreview from \"../components/PostPreview\";\n\nconst Main = tw.main`max-w-screen-lg m-auto`;\n\nconst Header = () => {\n  return <BlogHeader title=\"It's b:Log\" seo=\"Home Page\" />;\n};\n\n// markup\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Main>\n        <Header />\n        <p>No bLog posts Found.</p>\n      </Main>\n    );\n  } else {\n    return (\n      <Main>\n        <Header />\n        {posts.map((post) => {\n          const {\n            fields: { slug },\n          } = post;\n          const { title, date, tags } = post.frontmatter;\n          return (\n            <ElementGapWrapper>\n              <PostPreview title={title} date={date} tags={tags} to={slug} />\n            </ElementGapWrapper>\n          );\n        })}\n      </Main>\n    );\n  }\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n        }\n        id\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["StyledWrapper","tw","children","StyledH1","StyledP1","title","date","tags","to","length","map","tag","name","Main","Header","seo","posts","data","allMarkdownRemark","nodes","post","slug","fields","frontmatter"],"sourceRoot":""}