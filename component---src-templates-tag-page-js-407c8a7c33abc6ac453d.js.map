{"version":3,"file":"component---src-templates-tag-page-js-407c8a7c33abc6ac453d.js","mappings":"wHAGMA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAM,uBAW5B,IAJ0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OAAO,gBAACF,EAAD,KAAgBE,K,wECLnBC,EAAWF,EAAAA,QAAAA,GAAAA,WAAH,gEAAGA,CAAK,uCAChBG,EAAWH,EAAAA,QAAAA,KAAAA,WAAH,gEAAGA,CAAO,gBAwBxB,IAnBoB,SAAC,GAA+B,IAA7BI,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACxC,OACE,gBAAC,IAAD,CAAYA,GAAIA,GACd,gBAACL,EAAD,KAAWE,GACX,gCACE,gBAAC,IAAD,KACE,gBAACD,EAAD,KAAWE,KAEZC,MAAAA,OAAA,EAAAA,EAAME,QAAS,GACdF,EAAKG,KAAI,SAACC,GAAD,OACP,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,KAAMD,Y,+EChBnBE,EAAgBZ,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAM,mCA2B5B,UAzBwB,SAAC,GAA2B,IAAzBa,EAAwB,EAAxBA,KAEjBH,EAFyC,EAAlBI,YAEvBJ,IAEAK,EAAUF,EAAKG,kBAAfD,MAER,OACE,gCACE,gBAAC,IAAD,CAAYX,MAAK,UAAYM,EAAOO,IAAG,UAAYP,IACnD,gBAACE,EAAD,KACGG,EAAMN,KAAI,oBAAGS,KAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,YAAnB,OACT,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEhB,MAAOgB,EAAYhB,MACnBC,KAAMe,EAAYf,KAClBC,KAAMc,EAAYd,KAClBC,GAAIY,EAAOE","sources":["webpack://b-log/./src/components/ElementGapWrapper.js","webpack://b-log/./src/components/PostPreview.js","webpack://b-log/./src/templates/tag-page.js"],"sourcesContent":["import React from \"react\";\nimport tw from \"twin.macro\";\n\nconst StyledWrapper = tw.div`\n  mb-16\n`;\n\n/**\n * children의 수직 간격을 띄움\n */\nconst ElementGapWrapper = ({ children }) => {\n  return <StyledWrapper>{children}</StyledWrapper>;\n};\n\nexport default ElementGapWrapper;\n","import React from \"react\";\nimport StyledLink from \"./StyledLink\";\nimport tw from \"twin.macro\";\nimport { GapHorizontality } from \"../styles/gaps\";\nimport Tag from \"./Tag\";\n\nconst StyledH1 = tw.h1`m-0 mb-3`;\nconst StyledP1 = tw.span`m-0`;\n\n/**\n * 포스트의 타이틀, 날짜를 표시함. 클릭 시 해당 포스트로 이동함.\n */\nconst PostPreview = ({ title, date, tags, to }) => {\n  return (\n    <StyledLink to={to}>\n      <StyledH1>{title}</StyledH1>\n      <>\n        <GapHorizontality>\n          <StyledP1>{date}</StyledP1>\n        </GapHorizontality>\n        {tags?.length > 0 &&\n          tags.map((tag) => (\n            <GapHorizontality>\n              <Tag name={tag} />\n            </GapHorizontality>\n          ))}\n      </>\n    </StyledLink>\n  );\n};\n\nexport default PostPreview;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport tw from \"twin.macro\";\nimport BlogHeader from \"../components/BlogHeader\";\nimport ElementGapWrapper from \"../components/ElementGapWrapper\";\nimport PostPreview from \"../components/PostPreview\";\n\nconst PostContainer = tw.div`max-w-screen-xl m-auto`;\n\nconst TagPageTemplate = ({ data, pageContext }) => {\n  // tag name\n  const { tag } = pageContext;\n  // markdown data\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <>\n      <BlogHeader title={`Tags ; ${tag}`} seo={`Tags ; ${tag}`} />\n      <PostContainer>\n        {edges.map(({ node: { fields, frontmatter } }) => (\n          <ElementGapWrapper>\n            <PostPreview\n              title={frontmatter.title}\n              date={frontmatter.date}\n              tags={frontmatter.tags}\n              to={fields.slug}\n            />\n          </ElementGapWrapper>\n        ))}\n      </PostContainer>\n    </>\n  );\n};\n\nexport default TagPageTemplate;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      # What is edges? Meaning?\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledWrapper","tw","children","StyledH1","StyledP1","title","date","tags","to","length","map","tag","name","PostContainer","data","pageContext","edges","allMarkdownRemark","seo","node","fields","frontmatter","slug"],"sourceRoot":""}